<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Color -->
    <Color x:Key="PrimaryLightLightColor">#EBF5EC</Color>
    <Color x:Key="PrimaryLightColor">#DAECDF</Color>
    <Color x:Key="PrimaryLighterColor">#B3DEBF</Color>
    <Color x:Key="PrimaryColor">#83C1A0</Color>
    <Color x:Key="PrimaryDarkColor">#549783</Color>
    <Color x:Key="PrimaryDarkDarkColor">#216559</Color>
    <Color x:Key="BackgroundColor">#F2F2F2</Color>
    <SolidColorBrush x:Key="PrimaryLightLight" Color="{StaticResource PrimaryLightLightColor}"/>
    <SolidColorBrush x:Key="PrimaryLight" Color="{StaticResource PrimaryLightColor}"/>
    <SolidColorBrush x:Key="PrimaryLighter" Color="{StaticResource PrimaryLighterColor}"/>
    <SolidColorBrush x:Key="Primary" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="PrimaryDark" Color="{StaticResource PrimaryDarkColor}"/>
    <SolidColorBrush x:Key="PrimaryDarkDark" Color="{StaticResource PrimaryDarkDarkColor}"/>
    <SolidColorBrush x:Key="Background" Color="{StaticResource BackgroundColor}"/>

    <Color x:Key="Gray1Color">#202020</Color>
    <Color x:Key="Gray2Color">#8B8B8B</Color>
    <Color x:Key="Gray3Color">#CACACA</Color>
    <Color x:Key="Gray4Color">#E7E7E7</Color>
    <Color x:Key="Gray5Color">#F2F2F2</Color>
    <SolidColorBrush x:Key="Gray1" Color="{StaticResource Gray1Color}"/>
    <SolidColorBrush x:Key="Gray2" Color="{StaticResource Gray2Color}"/>
    <SolidColorBrush x:Key="Gray3" Color="{StaticResource Gray3Color}"/>
    <SolidColorBrush x:Key="Gray4" Color="{StaticResource Gray4Color}"/>

    <Color x:Key="RedColor">#CB0A0A</Color>
    <SolidColorBrush x:Key="Red" Color="{StaticResource RedColor}"/>
    <Color x:Key="GreenColor">#1B8766</Color>
    <SolidColorBrush x:Key="Green" Color="{StaticResource GreenColor}"/>

    <Style x:Key="ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryLightLight}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="FontFamily" Value="Itim"/>
        <Setter Property="Padding" Value="6,4,6,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource PrimaryLight}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryLight}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource PrimaryLightLight}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryLightLight}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource PrimaryLightLight}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryLightLight}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Gray4}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Gray4}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource PrimaryLightLight}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryLightLight}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Border -->
    <Style x:Key="Border" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="20"/>
    </Style>

    <!-- Button -->
    <Style x:Key="ButtonPrimary" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource PrimaryDark}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDark}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Gluten"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" Padding="8,4,8,4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryLight}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ButtonList" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryDark}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" Padding="8,4,8,4" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryLight}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonMainMenu" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonList}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Foreground" Value="{StaticResource Gray1}"/>
        <Setter Property="Width" Value="252"/>
        <Setter Property="Margin" Value="0,10,0,10"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="Gluten"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryLightLight}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListViewItem -->
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="{StaticResource PrimaryLightLightColor}"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="{StaticResource PrimaryLightLightColor}"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="{StaticResource PrimaryLightColor}"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="{StaticResource PrimaryLightColor}"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontFamily" Value="Itim"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- StackPanel -->
    <Style x:Key="StackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="20,12,20,12"/>
    </Style>
    
    <!-- TextBlock -->
    <Style x:Key="TextBlockHorizontal" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="FontFamily" Value="Itim"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- TextBox -->
    <Style x:Key="TextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" 
                        CornerRadius="0"
                        BorderBrush="{StaticResource Gray3}" 
                        BorderThickness="1" 
                        Background="#fff">
                        <ScrollViewer x:Name="PART_ContentHost" 
                            Focusable="false" 
                            HorizontalScrollBarVisibility="Hidden" 
                            VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="{StaticResource Gray3Color}"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="{StaticResource Gray2Color}"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="{StaticResource Gray2Color}"/>
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource Gray1}"/>
        <Setter Property="FontFamily" Value="Itim"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxInError" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>