<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Color -->
    <Color x:Key="PrimaryLight">#9EE37D</Color>
    <Color x:Key="Primary">#63C132</Color>
    <Color x:Key="PrimaryDark">#358600</Color>
    <Color x:Key="Background">#F2F2F2</Color>
    <Color x:Key="White">#FFFFFF</Color>
    <SolidColorBrush x:Key="PrimaryLightBrush" Color="{StaticResource PrimaryLight}"/>
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource Primary}"/>
    <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{StaticResource PrimaryDark}"/>
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource Background}"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource White}"/>

    <!-- Border -->
    <Style x:Key="border" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="10"></Setter>
    </Style>

    <!-- TextBlock -->
    <Style x:Key="textBlockHeader" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Margin" Value="0,0,0,4"/>
    </Style>
    <Style x:Key="textBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>
    <Style x:Key="textBlockHorizontal" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,0,8,0"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <!-- TextBox -->
    <Style x:Key="textBox" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" 
                        CornerRadius="0" 
                        BorderBrush="#000" 
                        BorderThickness="1" 
                        Background="#fff">
                        <ScrollViewer x:Name="PART_ContentHost" 
                            Focusable="false" 
                            HorizontalScrollBarVisibility="Hidden" 
                            VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource textBox}" x:Key="textBoxInError" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- StackPanel -->
    <Style x:Key="stackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="10"></Setter>
    </Style>

    <!-- Button -->
    <Style x:Key="buttonMenu" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"></Setter>
        <Setter Property="Margin" Value="4,0,4,0"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="button" TargetType="{x:Type Button}">
        
    </Style>
    <Style x:Key="buttonList" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Margin" Value="4,0,4,0"></Setter>
        <Setter Property="Foreground" Value="{StaticResource PrimaryDarkBrush}"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderThickness="1"
                            CornerRadius="10"
                            Padding="10,6,10,6"
                            BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ListViewItem -->
    <Style x:Key="listViewItem" TargetType="{x:Type ListViewItem}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
</ResourceDictionary>